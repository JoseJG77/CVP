/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/sweetalert2@11.21.0/src/utils/dom/getters.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{swalClasses}from"../classes.js";import{hasClass,isVisible}from"./domUtils.js";export const getContainer=()=>document.body.querySelector(`.${swalClasses.container}`);export const elementBySelector=e=>{const s=getContainer();return s?s.querySelector(e):null};const elementByClass=e=>elementBySelector(`.${e}`);export const getPopup=()=>elementByClass(swalClasses.popup);export const getIcon=()=>elementByClass(swalClasses.icon);export const getIconContent=()=>elementByClass(swalClasses["icon-content"]);export const getTitle=()=>elementByClass(swalClasses.title);export const getHtmlContainer=()=>elementByClass(swalClasses["html-container"]);export const getImage=()=>elementByClass(swalClasses.image);export const getProgressSteps=()=>elementByClass(swalClasses["progress-steps"]);export const getValidationMessage=()=>elementByClass(swalClasses["validation-message"]);export const getConfirmButton=()=>elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);export const getCancelButton=()=>elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);export const getDenyButton=()=>elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);export const getInputLabel=()=>elementByClass(swalClasses["input-label"]);export const getLoader=()=>elementBySelector(`.${swalClasses.loader}`);export const getActions=()=>elementByClass(swalClasses.actions);export const getFooter=()=>elementByClass(swalClasses.footer);export const getTimerProgressBar=()=>elementByClass(swalClasses["timer-progress-bar"]);export const getCloseButton=()=>elementByClass(swalClasses.close);const focusable='\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n';export const getFocusableElements=()=>{const e=getPopup();if(!e)return[];const s=e.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])'),t=Array.from(s).sort(((e,s)=>{const t=parseInt(e.getAttribute("tabindex")||"0"),o=parseInt(s.getAttribute("tabindex")||"0");return t>o?1:t<o?-1:0})),o=e.querySelectorAll(focusable),n=Array.from(o).filter((e=>"-1"!==e.getAttribute("tabindex")));return[...new Set(t.concat(n))].filter((e=>isVisible(e)))};export const isModal=()=>hasClass(document.body,swalClasses.shown)&&!hasClass(document.body,swalClasses["toast-shown"])&&!hasClass(document.body,swalClasses["no-backdrop"]);export const isToast=()=>{const e=getPopup();return!!e&&hasClass(e,swalClasses.toast)};export const isLoading=()=>{const e=getPopup();return!!e&&e.hasAttribute("data-loading")};
//# sourceMappingURL=/sm/e9e2e70a740572116d1cc2a1344dfebdfb0f3d48cebbbe928c91bd49a3e1b74f.map